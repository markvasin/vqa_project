
#training
MMF_USER_DIR="." mmf_run config="configs/experiments/defaults.yaml" model=simple_baseline dataset=clevr run_type=train_val checkpoint.resume=True training.experiment_name=baseline_att

#local
mmf_run config="configs/experiments/local.yaml" model=simple_baseline dataset=clevr run_type=train_val training.batch_size=128 training.experiment_name=test_run_2

#local mac_network
mmf_run config="configs/experiments/local.yaml" model=mac_network dataset=clevr run_type=train_val training.experiment_name=test_mac

#train MAC
MMF_USER_DIR="." mmf_run config="configs/experiments/defaults.yaml" model=mac_network dataset=clevr run_type=train_val training.experiment_name=mac_run

#train GQA dataset
MMF_USER_DIR="." mmf_run config="configs/experiments/defaults-gqa.yaml" model=simple_baseline_gqa dataset=gqa2 run_type=train_val training.experiment_name=test_gqa checkpoint.resume=True

#train MAC_network on GQA
MMF_USER_DIR="." mmf_run config="configs/experiments/mac-gqa.yaml" model=mac_network dataset=gqa2 run_type=train_val training.experiment_name=mac_gqa checkpoint.resume=True

#train vl_transformer on GQA
MMF_USER_DIR="." mmf_run config="configs/experiments/vl-transformer-gqa.yaml" model=vl_transformer dataset=gqa2 run_type=train_val training.experiment_name=vl_transformer_gqa

#train vl_transformer on CLEVR
MMF_USER_DIR="." mmf_run config="configs/experiments/vl-transformer-clevr.yaml" model=vl_transformer dataset=clevr run_type=train_val training.experiment_name=vl_transformer_clevr


#resume training
MMF_USER_DIR="." mmf_run config="configs/experiments/defaults.yaml" model=simple_baseline dataset=clevr run_type=train_val checkpoint.resume=True training.experiment_name=baseline_att


#evaluating
MMF_USER_DIR="." mmf_run config="configs/experiments/defaults.yaml" \
    model=simple_baseline \
    dataset=clevr \
    run_type=val \
    checkpoint.resume=True \
    checkpoint.resume_best=True

#Prediction
MMF_USER_DIR="." mmf_predict config="configs/experiments/defaults-gqa.yaml" model=simple_baseline_gqa dataset=gqa2 run_type=test training.experiment_name=test_gqa checkpoint.resume=True


#finetune VisualBERT on GQA dataset
MMF_USER_DIR="." mmf_run config="configs/experiments/visual-bert-gqa.yaml" run_type=train_val dataset=gqa model=visual_bert



#tensorboard
tensorboard --logdir=save/logs
tensorboard --logdir=save/baseline_att/logs/ --bind_all

